# download_images.py
from ddgs import DDGS
import requests
import os
from PIL import Image
from io import BytesIO
import time

QUERY = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å: ").strip()
MAX_IMAGES = 20
FOLDER = "downloaded_images"
os.makedirs(FOLDER, exist_ok=True)
if not QUERY:
    print("‚ùå –ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
    exit()
print(f"üîç –ò—â—É –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{QUERY}'...")
with DDGS() as ddgs:
    try:
        results = ddgs.images(
            query=QUERY,
            max_results=MAX_IMAGES
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        exit()
if not results:
    print("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
else:
    downloaded = 0
    for i, result in enumerate(results, start=1):
        try:
            image_url = result['image']
            print(f"üì• {i}/{MAX_IMAGES}: {image_url[:60]}...")
            response = requests.get(image_url, timeout=10)
            response.raise_for_status()
            img = Image.open(BytesIO(response.content))
            ext = img.format.lower() if img.format else "jpg"
            filename = f"{QUERY.replace(' ', '_')}_{i}.{ext}"
            filepath = os.path.join(FOLDER, filename)
            with open(filepath, 'wb') as f:
                f.write(response.content)
            downloaded += 1
            time.sleep(0.2)  # –ª—ë–≥–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å
        except Exception as e:
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ (–æ—à–∏–±–∫–∞): {e}")
            continue
    print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–∞—á–∞–Ω–æ: {downloaded} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫—É '{FOLDER}'")
