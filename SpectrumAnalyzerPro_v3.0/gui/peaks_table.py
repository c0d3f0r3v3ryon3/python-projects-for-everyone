"""
–¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤.
–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—ã, –∞–º–ø–ª–∏—Ç—É–¥—ã, —Ç–∏–ø—ã –º–æ–¥—É–ª—è—Ü–∏–∏.
"""

import sys
from PyQt5.QtWidgets import QWidget, QVBoxLayout, QTableWidget, QTableWidgetItem, QLabel, QHBoxLayout, QDoubleSpinBox, QPushButton
from PyQt5.QtCore import Qt
import numpy as np

class PeaksTableWidget(QWidget):
    def __init__(self, classifier, parent=None):
        super().__init__(parent)
        self.classifier = classifier
        self.peaks_df = None

        layout = QVBoxLayout()

        # –§–∏–ª—å—Ç—Ä—ã
        filter_layout = QHBoxLayout()
        filter_layout.addWidget(QLabel("–ú–∏–Ω. –∞–º–ø–ª–∏—Ç—É–¥–∞ (–¥–ë):"))
        self.min_amp_spin = QDoubleSpinBox()
        self.min_amp_spin.setRange(-100, 0)
        self.min_amp_spin.setValue(-50)
        self.min_amp_spin.valueChanged.connect(self.update_display)
        filter_layout.addWidget(self.min_amp_spin)

        filter_layout.addWidget(QLabel("–ú–∏–Ω. —à–∏—Ä–∏–Ω–∞ (–ú–ì—Ü):"))
        self.min_width_spin = QDoubleSpinBox()
        self.min_width_spin.setRange(0.001, 10)
        self.min_width_spin.setValue(0.01)
        self.min_width_spin.valueChanged.connect(self.update_display)
        filter_layout.addWidget(self.min_width_spin)

        layout.addLayout(filter_layout)

        # –¢–∞–±–ª–∏—Ü–∞
        self.table_widget = QTableWidget()
        self.table_widget.setColumnCount(7)
        self.table_widget.setHorizontalHeaderLabels([
            "–ß–∞—Å—Ç–æ—Ç–∞ (–ú–ì—Ü)", "–ê–º–ø–ª–∏—Ç—É–¥–∞ (–¥–ë)", "–õ–µ–≤–∞—è –≥—Ä.", "–ü—Ä–∞–≤–∞—è –≥—Ä.", "–®–∏—Ä–∏–Ω–∞ (–ú–ì—Ü)", "–ú–æ–¥—É–ª—è—Ü–∏—è", "–¢–∏–ø"
        ])
        self.table_widget.horizontalHeader().setSectionResizeMode(0, 1)  # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
        self.table_widget.horizontalHeader().setSectionResizeMode(1, 1)
        self.table_widget.horizontalHeader().setSectionResizeMode(2, 1)
        self.table_widget.horizontalHeader().setSectionResizeMode(3, 1)
        self.table_widget.horizontalHeader().setSectionResizeMode(4, 1)
        self.table_widget.horizontalHeader().setSectionResizeMode(5, 1)
        self.table_widget.horizontalHeader().setSectionResizeMode(6, 1)
        self.table_widget.cellDoubleClicked.connect(self.on_peak_double_click)
        layout.addWidget(self.table_widget)

        # –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å"
        self.recalc_button = QPushButton("üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å")
        self.recalc_button.clicked.connect(self.update_display)
        layout.addWidget(self.recalc_button)

        self.setLayout(layout)

    def update_table(self, peak_list: list):
        """–û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞ –ø–∏–∫–æ–≤."""
        self.peaks_df = peak_list
        self.update_display()

    def update_display(self):
        """–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É."""
        if not self.peaks_df:
            self.table_widget.setRowCount(0)
            return

        filtered = [
            p for p in self.peaks_df
            if p["–ê–º–ø–ª–∏—Ç—É–¥–∞ (–¥–ë)"] >= self.min_amp_spin.value() and
               p["–®–∏—Ä–∏–Ω–∞ (–ú–ì—Ü)"] >= self.min_width_spin.value()
        ]

        self.table_widget.setRowCount(len(filtered))
        for row, peak in enumerate(filtered):
            for col, key in enumerate([
                "–ß–∞—Å—Ç–æ—Ç–∞ (–ú–ì—Ü)", "–ê–º–ø–ª–∏—Ç—É–¥–∞ (–¥–ë)", "–õ–µ–≤–∞—è –≥—Ä.", "–ü—Ä–∞–≤–∞—è –≥—Ä.",
                "–®–∏—Ä–∏–Ω–∞ (–ú–ì—Ü)", "–ú–æ–¥—É–ª—è—Ü–∏—è", "–¢–∏–ø"
            ]):
                value = peak[key]
                text = f"{value:.3f}" if isinstance(value, float) else str(value)
                item = QTableWidgetItem(text)
                item.setTextAlignment(Qt.AlignCenter)
                self.table_widget.setItem(row, col, item)

    def on_peak_double_click(self, row, col):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ –ø–∏–∫–µ."""
        freq_item = self.table_widget.item(row, 0)
        if freq_item:
            freq = freq_item.text()
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —ç—Ç—É —á–∞—Å—Ç–æ—Ç—É
            print(f"–î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –Ω–∞ –ø–∏–∫–µ: {freq} –ú–ì—Ü")
